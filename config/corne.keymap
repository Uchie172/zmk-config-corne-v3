/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/naginata.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

 {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        }; 
    };

    macros {
        ng_on: ng_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LANGUAGE_1 &kp INTERNATIONAL_4 &to 1>;
        };

        ng_off: ng_off {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LANGUAGE_2 &kp INTERNATIONAL_5 &to 0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        BrowseLayer {
            bindings = <&to 5>;
            key-positions = <25 26>;
            layers = <0>;
        };

        MediaLayer {
            bindings = <&to 6>;
            key-positions = <13 14>;
            layers = <0>;
        };

        combo_ng_on {
            timeout-ms = <300>;
            key-positions = <18 19>;
            bindings = <&ng_on>;
            layers = <0>;
        };

        combo_ng_off {
            timeout-ms = <300>;
            key-positions = <16 17>;
            bindings = <&ng_off>;
            layers = <0 1>;
        };

        System {
            bindings = <&to 7>;
            key-positions = <2 1>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Layer_0 {
            bindings = <
&mt LALT ESCAPE  &kp Q  &kp W  &kp E            &kp R      &kp T        &kp Y            &kp U        &kp I      &kp O    &kp P      &kp SINGLE_QUOTE
&mt LCTRL TAB    &kp A  &kp S  &kp D            &kp F      &kp G        &kp H            &kp J        &kp K      &kp L    &kp MINUS  &kp SEMI
&td0             &kp Z  &kp X  &kp C            &kp V      &kp B        &kp N            &kp M        &kp COMMA  &kp DOT  &kp FSLH   &kp EQUAL
                               &mt LGUI ESCAPE  &kp SPACE  &lt 2 DEL    &lt 3 BACKSPACE  &lt 4 ENTER  &lt 6 TAB
            >;

            label = "QWERTY";
        };

        naginata_layer {
            bindings = <
&mt LALT ESCAPE  &ng Q  &ng W  &ng E    &ng R      &ng T        &ng Y            &ng U        &ng I      &ng O    &ng P     &kp SINGLE_QUOTE
&kp LCTRL        &ng A  &ng S  &ng D    &ng F      &ng G        &ng H            &ng J        &ng K      &ng L    &ng SEMI  &kp MINUS
&td0             &ng Z  &ng X  &ng C    &ng V      &ng B        &ng N            &ng M        &ng COMMA  &ng DOT  &ng FSLH  &kp EQUAL
                               &ng_off  &ng SPACE  &lt 2 DEL    &lt 3 BACKSPACE  &lt 4 ENTER  &ng_on
            >;

            label = "NAGINATA";
        };

        layer_2 {
            bindings = <
&none  &kp LPAR          &kp RPAR           &kp GRAVE         &kp TILDE          &none            &kp KP_EQUAL     &kp N7  &kp N8      &kp N9  &kp KP_PLUS      &none
&none  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LG(LC(F))    &kp KP_MULTIPLY  &kp N4  &kp N5      &kp N6  &kp KP_SUBTRACT  &none
&none  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp BACKSLASH     &kp PIPE           &kp LS(LC(S))    &kp COLON        &kp N1  &kp N2      &kp N3  &kp KP_DIVIDE    &none
                                            &none             &kp LSHFT          &none            &kp ENTER        &kp N0  &kp KP_DOT
            >;

            label = "Number";
        };

        layer_3 {
            bindings = <
&none  &none     &none     &kp UP_ARROW    &kp PAGE_UP    &none      &none  &kp LC(UP_ARROW)    &kp LC(DOWN)   &kp LC(P)  &kp LG(NUMBER_0)  &none
&none  &kp HOME  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT      &kp END    &none  &kp LC(LEFT_ARROW)  &kp LC(RIGHT)  &none      &kp LG(MINUS)     &none
&none  &none     &none     &none           &kp PAGE_DOWN  &none      &none  &none               &none          &none      &kp LG(PLUS)      &none
                           &none           &none          &none      &none  &kp LSHFT           &kp LEFT_GUI
            >;

            label = "Movement";
        };

        layer_4 {
            bindings = <
&none  &kp K_MUTE         &none  &none  &none  &none    &kp F6                &kp F7                &kp F8          &kp F9                    &kp F10                   &none
&none  &kp C_VOLUME_DOWN  &none  &none  &none  &none    &kp F1                &kp F2                &kp F3          &kp F4                    &kp F5                    &none
&none  &kp C_VOLUME_UP    &none  &none  &none  &none    &kp LG(LS(NUMBER_3))  &kp LG(LS(NUMBER_4))  &kp LG(LS(N5))  &kp LG(LS(LC(NUMBER_3)))  &kp LG(LS(LC(NUMBER_4)))  &none
                                 &none  &none  &none    &none                 &none                 &none
            >;

            label = "Shortcuts";
        };

        layer_5 {
            bindings = <
&to 0  &to 0      &none      &kp LG(R)        &kp LG(LS(R))  &kp LG(J)                &none  &none  &none          &none           &none  &kp LG(NUMBER_0)
&none  &none      &none      &kp LS(LC(TAB))  &kp LC(TAB)    &kp LS(LG(BACKSLASH))    &none  &none  &none          &none           &none  &kp LG(MINUS)
&none  &kp LG(Z)  &kp LG(W)  &kp LG(C)        &kp LG(V)      &none                    &none  &none  &kp LS(COMMA)  &kp LS(PERIOD)  &none  &kp LG(PLUS)
                             &kp LGUI         &kp LS(SPACE)  &kp SPACE                &none  &none  &none
            >;

            label = "Browse";
        };

        layer_6 {
            bindings = <
&to 0  &to 0  &kp LG(LC(T))  &kp LG(LC(A))             &kp LG(LC(S))         &kp LG(LC(G))            &none            &none         &none       &none  &none  &none
&none  &none  &none          &kp LG(LC(P))             &kp LG(LC(F))         &kp LG(S)                &none            &none         &none       &none  &none  &none
&none  &none  &none          &kp LS(LG(LEFT_BRACKET))  &kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)    &none            &none         &none       &none  &none  &none
                             &kp LEFT                  &kp SPACE             &kp RIGHT                &kp C_VOLUME_UP  &kp C_VOL_DN  &kp K_MUTE
            >;

            label = "Media";
        };

        layer_7 {
            bindings = <
&to 0  &to 0          &none          &none          &none          &bootloader      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none  &none  &none
&none  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none  &none  &none
&none  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &none  &none
                                     &bt BT_PRV     &bt BT_NXT     &none            &none         &kp NUMBER_0  &kp ENTER
            >;

            label = "System";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
